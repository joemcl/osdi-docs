{"name":"Osdi-docs","tagline":"OSDI Specification","body":"---\r\nlayout: default\r\ntitle: \"OSDI\"\r\npermalink: index.html\r\n---\r\n\r\n<center>\r\n<img src=\"http://opensupporter.org/wp-content/themes/osdiv2/images/site/osdi-logo.png\" alt=\"OSDI\" />\r\n</center>\r\n\r\n-----------------------------\r\n\r\nThe Open Supporter Data Interface (OSDI) effort seeks to define an API and data structures for interoperability among products in the **progressive** cause-based, campaign and non-profit marketplace. The existence of a common API will reduce customer costs related to moving data between different systems, lower integration costs and enhance the ability of innovators to create products for the marketplace.\r\n\r\nOSDI membership is made up of progressive vendors and organizations as well as invited non-partisan and mainstream industry vendors.\r\n\r\nMore Information about OSDI can be found at: [opensupporter.org](http://opensupporter.org)\r\n\r\nThe Github source for these documents can be found at: [https://github.com/opensupporter/osdi-docs](https://github.com/opensupporter/osdi-docs)\r\n\r\nIf you are looking at those sources now and want to see the prettier github pages version, look here:\r\n[https://opensupporter.github.io/osdi-docs](https://opensupporter.github.io/osdi-docs)\r\n\r\nExperiment with our prototype server: [http://api.opensupporter.org](http://api.opensupporter.org)\r\n\r\n\r\n### Sections\r\n\r\n* [API Overview and Structure](#api-overview-and-structure)\r\n    * [Version](#version)\r\n    * [Working with OSDI in Real Life](#working-with-osdi-in-real-life)\r\n    * [REST + HAL](#rest--hal)\r\n    * [Versioning](#versioning)\r\n    * [Helpers](#helpers)\r\n    * [API Entry Point and Linking](#api-entry-point-and-linking)\r\n    * [Curies](#curies)\r\n    * [Collections and Navigation](#collections-and-navigation)\r\n    * [Filtering Collections](#filtering-collections)\r\n    * [Encryption](#encryption)\r\n    * [Authentication](#authentication)\r\n    * [Mime Types](#mime-types)\r\n    * [Error Handling](#error-handling)\r\n    * [Flexibility and Server Behavior](#flexibility-and-server-behavior)\r\n    * [Notational Conventions](#notational-conventions)\r\n* [Authors and Leadership](#authors-and-leadership)\r\n* [Contributing and Contact](#contributing-and-contact)\r\n\r\n    \r\n\r\n## API Overview and Structure\r\n\r\nOSDI used a combination of approaches to provide flexible reading of data, simple operations for simple scenarios, and general purpose CRUD access.\r\n\r\n### Version\r\nThis document represents OSDI version 1.0.1\r\n\r\n### Working with OSDI in Real Life\r\n\r\nOSDI Servers SHOULD expose the [HAL Browser](https://github.com/mikekelly/hal-browser) to provide a consistent interface for developers, scripters, digital, tech and data staff to work with.\r\n\r\n\r\n<center>\r\n<a href=\"images/hal-browser.png\"><img src=\"images/hal-browser-small.png\" /></a>\r\n</center>\r\n\r\n\r\nIn the course of writing scripts, reports, applications and other utilities that integrate via OSDI, examining and inspecting the different resources available on a server is a significant component of time spent.  By having a consistent interface to work in, customers can further decrease their costs.\r\n\r\nAsk your OSDI vendor for the URL to their HAL Browser.\r\n\r\n### REST + HAL\r\n\r\nGenerally, OSDI follows traditional RESTful practices for accessing resources and collections of resources as well as creating, editing, updating, and deleting resources. \r\n\r\nOSDI also implements the [JSON+HAL spec](http://tools.ietf.org/html/draft-kelly-json-hal-05) hypermedia standard, providing links to associated collections and resources. JSON+HAL specifies a simple way to embed linking into APIs.  The combination of linking and a specification allows generic clients to be written and, indeed, [many languages have HAL clients](http://stateless.co/hal_specification.html).  Linking itself makes it easier to both reason about and write clients for an API.\r\n\r\nBy default, server responses should expand first level instances unless otherwise specified.  For example, in a response for a collection of resources, those resources should be embedded.\r\n\r\nFinally, OSDI implements the OData query language for filtering collections.\r\n\r\n_[Back to top...](#)_\r\n\r\n### Versioning\r\nOSDI uses Semantic Versioning. In practice, this means:\r\n\r\n* Breaking changes will use a new major version number (eg: 2.0)\r\n* New features will use a minor version number (eg: 1.1)\r\n* Incremental Bug fixes may use a sub-minor version number (1.1.1)\r\n\r\n### Current Version\r\nWhen accessing a server, a client can determine the OSDI version by examining the osdi_version attribute in the [API Entry Point (AEP)](aep.html).\r\n\r\n\r\n_[Back to top...](#)_\r\n\r\n### Helpers\r\nOSDI also allows a client to perform a number of operations at once that in a traditionally RESTful API would take multiple requests through the use of helpers. For example, helpers can be used to create a new Person resource *and* register that this new person also signed a petition at the same time, something that with REST would require two operations (first creating the person, then associating them with the petition). \r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n### API Entry Point and linking\r\n\r\nAll access through OSDI starts at the [API Entry Point (AEP)](aep.html).  The AEP is a resource that acts like a directory of the types of resources available on a server. It also includes capability information like the maximum query pagesize and links to helper endpoints.\r\n\r\nYour service provider can tell you what the AEP URL is for your account.\r\n\r\nYou can explore the AEP with a user-friendly interface by visiting our [prototype endpoint](http://api.opensupporter.org).\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n### Curies\r\n\r\nYou may have noticed that most links are prefaced with a name space \"osdi\" and that in the _links section there is a key labeled \"curies.\" The link section defines links to *relationships* between objects and curies define those relationships. You will find documentation on the particular relationship by using the templated curie link.  For example, given the following links section:\r\n\r\n```javascript\r\n\"_links\": {\r\n    \"curies\": [{ \"name\": \"osdi\", \"href\": \"http://api.opensupporter.org/docs/v1/{rel}\", \"templated\": true }],\r\n    \"self\": {\r\n        \"href\": \"http://api.opensupporter.org/api/v1/answers/46\"\r\n    },\r\n    \"osdi:question\": {\r\n        \"href\": \"http://api.opensupporter.org/api/v1/questions\"\r\n    }\r\n}\r\n```\r\n    \r\nIn order to fetch documentation on the question relationship, you would visit the following url: ```http://api.opensupporter.org/docs/v1/question```\r\n\r\nAny links not prefaced with a curie name space are defined [here](http://www.iana.org/assignments/link-relations/link-relations.xml).\r\n\r\nVendors who add their own vendor-specific relationships must defined their own curie and preface their relationships with their own curie namespace.  For example,\r\n\r\n```\r\n\"_links\": {\r\n    \"curies\": [\r\n        { \"name\": \"osdi\", \"href\": \"http://api.opensupporter.org/docs/v1/{rel}\", \"templated\": true },\r\n        { \"name\": \"fb\", \"href\": \"http://facebook.com/docs/v1/{rel}\", \"templated\": true }\r\n    ],\r\n    \"self\": {\r\n        \"href\": \"http://api.opensupporter.org/api/v1/question_answers/46\"\r\n    },\r\n    \"osdi:question\": {\r\n        \"href\": \"http://api.opensupporter.org/api/v1/questions\"\r\n    },\r\n    \"fb:profile\": {\r\n        href: \"http://facebook.com/profiles/1234\"\r\n    }\r\n}\r\n```\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n### Collections and Navigation\r\n\r\nWhen retrieving collections, the response representation will include some common attributes.\r\n\r\n| Name  | Type | Description\r\n|-------|-------------------------------|-------------------------------\r\n| total_pages    | integer                  | The number of pages applicable to this collection.\r\n| total_records    | integer         | The total number of resources matching this collection.\r\n| page    | integer                  | The page number of this response.\r\n\r\n\r\nCollection responses may include additional links for navigation to previous and next pages.\r\n\r\n|Name\t\t| Description\r\n|-----------|------------------------\r\n|next\t\t|The link for the next page of results.\r\n|previous\t|The link for the previous page of results.\r\n\r\nThe parameters ```per_page``` and ```page``` control pagination.\r\n\r\n* ```?per_page``` specifies how many results to return per page.\r\n* ```?page``` specifies the starting page to start with.\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n### Filtering Collections\r\n\r\nWhen retrieving collections, a client may request that the server filter the results according to a query.  OSDI makes use of a subset of the OData query language to accomplish this.  The filter string is the value of the 'filter' query parameter.\r\n\r\nSee [OData Filter Query](http://www.odata.org/documentation/odata-v2-documentation/uri-conventions/#45_Filter_System_Query_Option_filter) for more information. \r\n\r\nGeneral information can be found at [odata.org](http://odata.org).\r\n\r\n#### Conventions\r\n\r\n* String literals are enclosed in single quotes, eg: 'Jon'\r\n* Integers are not quoted, eg: 5\r\n* The whole query string is not enclosed in any quotes\r\n\r\n#### Operators\r\n\r\nOSDI supports the following OData operators:\r\n\r\n| Name  | Description | Example\r\n|-------|-------------------------------|-------------------------------\r\n| eq    | Exact match                   | first_name eq 'John'\r\n| ne    | Not Equal exact match         | first_name ne 'John'\r\n| gt    | Greater than                  | birthdate.month gt 1980\r\n| ge    | Greater or equal than         | created gt '2013-11-17T18:27:35-05'\r\n| lt    | Less than                     | birthdate.year lt 1980\r\n| le    | Less or equal than            | created le '2013-11-17T18:27:35-05'\r\n| or    | Logical OR                    | first_name eq 'John' or first_name eq 'Jon'\r\n| and   | Logical AND                   | first_name eq 'John' and last_name eq 'Doe'\r\n    \r\nOSDI defines the following OPTIONAL extension operators:\r\n\r\n| Name  | Description | Example\r\n|-------|-------------------------------|------------------------------\r\n| like  | Case insensitive match        | first_name like 'john'       # returns John or john\r\n| re    | Matches a regular expression  | first_name regexp '/[Rr]ob/' # Returns robert, Robert, rob, roberto \r\n\r\n#### Functions\r\n\r\nOSDI defines the following OPTIONAL extension functions:\r\n\r\n\r\n| Name  | Description | Example\r\n|-------|-------------|-----------------------------------------------\r\n| near  | Returns entries near a location within a radius   | gender eq 'Female' and near('10011', '5 miles')\r\n\r\n#### Examples\r\n\r\nFind all males in a given ZIP code: ```GET /api/v1/people?filter=gender eq 'Male' and address.postal_code eq '10011'```\r\n    \r\nFind new signups on or since a date and time (Eastern Time) ```GET /api/v1/people?filter=created ge '2013-11-17T18:27:35-05'```\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n###\tEncryption\r\n\r\nProviders may support secure HTTP connections using TLS. TLS 1.0, which shall be implemented, is specified in [RFC2246], and the TLS 1.1 and TLS 1.2 should be implemented as specified in [RFC4346] and [RFC5246], respectively.\r\n\r\nProviders may support non-secure HTTP connections in addition or instead.\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n###\tAuthentication\r\n\r\nClients and providers may use a variety of mechanisms to authenticate and authorize operations.  The specification does not currently require supporting a specific method.  However, there are many choices which can work with this specification.  \r\n\r\n* Cookie-Based Authentication\r\n* HTTP Basic\r\n* HTTP Digest\r\n* Token-Based Authentication\r\n* OAuth and OAuth 2.0\r\n* OpenID\r\n\r\nFuture versions of this specification may officially support one or more of these methods, or provide standard ways of implementing various methods, or may in other ways be more specific about security and authentication.\r\n\r\n\r\n#### Token Based Authentication\r\n\r\nWhile OSDI does not currently mandate implementation of token-based authentication, for those that do implement this method of authentication the following standard should be followed. \r\n\r\nFor header-based token authentication, the header should be named `OSDI-API-Token` (case sensitive), as in this example:\r\n\r\n```\r\nOSDI-API-Token: [your token here]\r\n```\r\n\r\nFor URL query string-based token authentication, the query parameter should be named `osdi-api-token` (case insensitive), as in this example:\r\n\r\n```\r\nhttps://api.opensupporter.org/api/v1/?osdi-api-token=[your token here]\r\n```\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n\r\n### Mime Types\r\nWhen sending requests or responses, the preferred mime type is ```application/json```.\r\n\r\nServers and clients are __strongly__ encouraged to be liberal in accepting entities with a missing or incorrect mime type.\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n### Error Handling\r\n\r\nIf the attempt to access, update, or create the a resource or collection fails, the server shall return the appropriate HTTP error code representing the failure.\r\n\r\nWithin the response body, the server shall include descriptive information on the nature of the  failure.\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n\r\n### Flexibility and Server Behavior\r\n\r\nNot all systems that implement OSDI will implement all aspects of the specification. \r\n\r\nThere are no required fields in OSDI, and many relations are left up to each individual system and server.\r\n\r\nSome servers may support some or all of the different resource collections.  For example, a peer to peer donation system might support Donations and People but not events. In order to find out what resources are available and what URIs to use to access them, do a GET on the AEP URL.\r\n\r\nSome servers may support certain helpers and not others. The AEP and associated resources also includes links to the  helper endpoints available.\r\n\r\nSimilarly, matching behavior will be determined by each implementing system. For example, some systems may match people based on email address or other information.\r\n\r\n_[Back to top...](#)_\r\n\r\n\r\n\r\n\r\n### Notational Conventions\r\n\r\nIn this specification, when defining models, the following notational conventions are used.\r\n\r\n|Convention\t|Description\r\n|:-----------:|--------------\r\n|Type[]    | An array of objects of type 'type'\r\n|Type[]*    | A reference to a collection of resources of type 'type'\r\n|\tType*\t| A reference to a single resource of type 'type'\r\n|\tstring\t| A string\r\n|\tdatetime| A date and time representation.  In JSON this is a string.  The contents of this attribute shall be  ISO 8601 \r\n| Object\t| A complex attribute represented by a JSON object\r\n| decimal\t| A number in decimal notation such as 12.15. Used for currency.\r\n| flexenum  | One of a list of values, or another value. For example, for party_identification on people, if the person is a Democrat they should be marked as \"Democratic\" with that exact spelling and casing, but if they are not one of the defined types then you can use another value instead, such as \"Working Families\".\r\n\r\nIn the description of string types, sometimes the specification will list a set of acceptable values such as\r\n\r\n| Name\t\t| Type\t\t| Description\r\n|-----------|-----------|------------------\r\n| gender\t| string\t| one of \"Male\", \"Female\", \"Other\" |\r\n\r\nIn these cases, the string value should conform to one of the choices unless specified otherwise.\r\n\r\n_[Back to top...](#)_\r\n\r\n    \r\n\r\n## Authors and Leadership\r\n\r\n* Leo Aguayo, Organizer\r\n* Tim Anderegg, New Organizing Institute (NOI)\r\n* Topper Bowers, Independent\r\n* Beth Becker, Indigo Strategies\r\n* Gilbert Chan, Organizer\r\n* Josh Cohen, Washington United For Marriage (Editor)\r\n* Jeff Crigler, Catalist\r\n* Gustavo Costa, The Action Network\r\n* Michael Eskin, Blue State Digital\r\n* Jascha Franklin-Hodge, Blue State Digital\r\n* Abraham Godong, FasterCampaigns\r\n* Tim Gutowski, Trilogy Interactive\r\n* Chuck Hagenbuch, Blue State Digital\r\n* Harlan Hill, Indigo Strategies\r\n* Tim Holahan, BroadStripes\r\n* Matt Klaber, Independent\r\n* Ben Krokower, FasterCampaigns\r\n* Eli Lee, The Quad\r\n* Dave Leichtman, Microsoft Corporation\r\n* Marc Love, Independent\r\n* Walter Ludwig, Indigo Strategies\r\n* Drew Miller, NGP VAN\r\n* Joe McLaughlin, Citizen Action NY\r\n* Mark Paquette, TheDataBank\r\n* Charles Parsons, Salsa Labs\r\n* Rich Ranallo, Revolution Messaging\r\n* Jason Rosenbaum, The Action Network\r\n* Shaie Sachs, NGP VAN\r\n* Ben Stein, Mobile Commons\r\n* Ben Stroud, Targetsmart Communications\r\n* Ray Suelzer, UFCW International Union\r\n* Nate Thames, ActBlue\r\n* Jim Pugh, ShareProgress\r\n* Sylvia Rolle, Washington United for Marriage\r\n* Chris Thomas, Sierra Club\r\n* Brian Vallelunga, Trilogy Interactive (Editor)\r\n* Sandra Wechsler, The Quad\r\n* Nathan Woodhull, ControlShift Labs\r\n* Ryan Zarkesh\r\n* Misha Zhurkin, Catalist\r\n\r\n### Additional Acknowledgments\r\n* Reed Probus, Web, Logo & Graphic Design\r\n* Nathan Tabak, Whitepaper writing and editing\r\n* Anthony Whittaker, Evangelism and Booth Duty\r\n* Scott Wooledge, V1 Logo\r\n\r\n### Leadership\r\nSee our [governance committee members and executive officers](http://opensupporter.org/leadership).\r\n\r\n_[Back to top...](#)_\r\n\r\n## Contributing and Contact\r\n\r\nAnyone is welcome to contribute by filing GitHub issues. To join our committees for specification discussion, please contact us at [http://opensupporter.org](http://opensupporter.org) or via email at [info@opensupporter.org](mailto:info@opensupporter.org).\r\n\r\n_[Back to top...](#)_\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}